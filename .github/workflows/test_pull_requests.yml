# Our minimal suite of tests that run on each pull request
name: PR Test

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'

jobs:
  manifest:
    # make sure all necessary files will be bundled in the release
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install check-manifest
      - name: Check Manifest
        run: check-manifest

  localization_syntax:
    # make sure all necessary files will be bundled in the release
    name: Check l18n syntax
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install --upgrade pip
      - name: Check localization formatting
        run: |
          pip install --upgrade pip semgrep
          # f"..." and f'...' are the same for semgrep
          semgrep --error --lang python --pattern 'trans._(f"...")' napari
          semgrep --error --lang python --pattern 'trans._($X.format(...))' napari

  test:
    name: ${{ matrix.platform }} ${{ matrix.python }} ${{ matrix.toxenv || matrix.backend }} ${{ matrix.MIN_REQ && 'min_req' }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python: ["3.8", "3.9", "3.10"]
        backend: [pyqt5, pyside2]
        # include:
        #   # Windows py38
        #   - python: 3.8
        #     platform: windows-latest
        #     backend: pyqt5
        #   - python: 3.8
        #     platform: windows-latest
        #     backend: pyside2
        #   - python: 3.9
        #     platform: macos-latest
        #     backend: pyqt
        #   # minimum specified requirements
        #   - python: 3.8
        #     platform: ubuntu-18.04
        #     MIN_REQ: 1
        #   # test with --async_only
        #   - python: 3.8
        #     platform: ubuntu-18.04
        #     toxenv: async-pyqt-py38-linux
        #   # test without any Qt backends
        #   - python: 3.8
        #     platform: ubuntu-18.04
        #     toxenv: headless-py38-linux

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - uses: tlambert03/setup-qt-libs@v1

      # strategy borrowed from vispy for installing opengl libs on windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          python tools/minreq.py
          pip install -e .[testing]
          pip install $${{ matrix.backend }}
        env:
          # tools/minreq.py sets all deps to their minumim stated versions
          # it is a no-op if MIN_REQ is not set
          MIN_REQ: ${{ matrix.MIN_REQ }}

      - name: Test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: python -m pytest napari --color=yes --cov=napari --cov-report=xml
        env:
          NUMPY_EXPERIMENTAL_ARRAY_FUNCTION: ${{ matrix.MIN_REQ || 1 }}
          PYVISTA_OFF_SCREEN: True
          MIN_REQ: ${{ matrix.MIN_REQ }}

      - name: Coverage
        if: runner.os == 'Linux' && matrix.python == '3.9'
        uses: codecov/codecov-action@v3

  test_pip_install:
    name: ubuntu-latest 3.9 pip install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: napari-from-github

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - uses: tlambert03/setup-qt-libs@v1

      - name: Install this commit
        run: |
          pip install --upgrade pip
          pip install ./napari-from-github[all,testing]

      - name: Test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: python -m pytest --pyargs napari --color=yes
